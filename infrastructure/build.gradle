buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java-conventions'
    id 'application'
    id 'jacoco-report-aggregation'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group 'io.github.gabrielmsouza.catalogo.infrastructure'

bootJar {
    archiveFileName.set("application.jar")
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

ext {
    cache2k = "2.6.1.Final"
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation('ch.qos.logback:logback-classic:1.4.12')
    implementation('net.logstash.logback:logstash-logback-encoder:7.0.1')

    implementation("com.fasterxml.jackson.module:jackson-module-blackbird")

    implementation('com.google.guava:guava:33.2.1-jre')

    implementation("io.github.resilience4j:resilience4j-spring-boot3")
    implementation("io.github.resilience4j:resilience4j-bulkhead")
    implementation("io.github.resilience4j:resilience4j-circuitbreaker")
    implementation("io.github.resilience4j:resilience4j-retry")

    implementation("org.cache2k:cache2k-api:$cache2k")
    implementation("org.cache2k:cache2k-spring:$cache2k")
    runtimeOnly("org.cache2k:cache2k-core:$cache2k")

    implementation("org.springframework.boot:spring-boot-starter-aop")
    implementation("org.springframework.boot:spring-boot-starter-cache")
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-undertow')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation("org.springframework.boot:spring-boot-starter-graphql")
    implementation('org.springframework.boot:spring-boot-starter-oauth2-resource-server')
    implementation("org.springframework.boot:spring-boot-starter-data-elasticsearch")

    implementation("org.springframework.cloud:spring-cloud-contract-wiremock")

    implementation("org.springframework.kafka:spring-kafka")

    implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0') {
        exclude group: 'org.springdoc', module: 'springdoc-openapi-ui'
    }

    testImplementation(project(path: ':domain', configuration: 'testClasses'))

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.security:spring-security-test')
    testImplementation("org.springframework.graphql:spring-graphql-test")
    testImplementation("org.springframework.kafka:spring-kafka-test")
    testImplementation("org.springframework.boot:spring-boot-testcontainers")

    testImplementation('org.testcontainers:testcontainers:1.19.8')
    testImplementation("org.testcontainers:elasticsearch:1.19.8")
    testImplementation("org.testcontainers:kafka:1.19.8")
    testImplementation('org.testcontainers:junit-jupiter:1.19.8')
}

dependencyManagement {
    imports {
        mavenBom "io.github.resilience4j:resilience4j-bom:2.2.0"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.3"
    }
}

testCodeCoverageReport {
    reports {
        xml {
            enabled true
            destination file("$rootDir/build/reports/jacooco/test/jacocoTestResport.xml")
        }

        html {
            enabled true
            destination file("$rootDir/build/reports/jacooco/test/")
        }
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}