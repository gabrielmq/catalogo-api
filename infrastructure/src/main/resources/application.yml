cache:
  type: cache2k
  names: admin-categories,admin-genres,admin-videos
  max-entries: 200
  ttl: 60 # seconds

graphql:
  graphiql:
    enabled: false

elasticsearch:
  socket-timeout: 1_000
  connect-timeout: 250

kafka:
  auto-create-topics: false
  pool-timeout: 1_000 # Time to wait for a connection from the pool
  consumers:
    categories:
      auto-offset-reset: earliest
      concurrency: 1 # Number of threads to run in parallel
      id: kafka-listener-categories
      topics: adm_videos_mysql.adm_videos.categories
      group-id: catalogo-service
      max-attempts: 4
    cast-members:
      auto-offset-reset: earliest
      concurrency: 1
      id: kafka-listener-castmembers
      topics: adm_videos_mysql.adm_videos.cast_members
      group-id: catalogo-service
      max-attempts: 4
    genres:
      auto-offset-reset: earliest
      concurrency: 1
      id: kafka-listener-genres
      topics: adm_videos_mysql.adm_videos.genres
      group-id: catalogo-service
      max-attempts: 4

rest-client:
  categories:
    base-url: "${rest-client.base-url}/api/categories"
    read-timeout: 1_000
  genres:
    base-url: "${rest-client.base-url}/api/genres"
    read-timeout: 1_000
  videos:
    base-url: "${rest-client.base-url}/api/videos"
    read-timeout: 1_000
  keycloak:
    base-url: "${keycloak.host}/realms/${keycloak.realm}"

keycloak:
  token-uri: /protocol/openid-connect/token

server:
  port: 8080
  shutdown: graceful
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json # Comma-separated list of MIME types that should be compressed.
    min-response-size: 1024
  undertow:
    threads:
      worker: 64
      io: 4

spring:
  main:
    banner-mode: off
  lifecycle:
    timeout-per-shutdown-phase: 10s
  servlet:
    multipart:
      max-file-size: 10GB
      max-request-size: 100GB
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${keycloak.host}/realms/${keycloak.realm}/protocol/openid-connect/certs
          issuer-uri: ${keycloak.host}/realms/${keycloak.realm}
  graphql:
    graphiql:
      enabled: ${graphql.graphiql.enabled}
  elasticsearch:
    uris: ${elasticsearch.uris}
    username: ${elasticsearch.username}
    password: ${elasticsearch.password}
    connection-timeout: ${elasticsearch.connect-timeout}
    socket-timeout: ${elasticsearch.socket-timeout}
  kafka:
    bootstrap-servers: ${kafka.bootstrap-servers}
  cache:
    type: ${cache.type}
    cache-names: ${cache.names}

resilience4j.bulkhead:
  configs:
    default:
      maxConcurrentCalls: 25 # Maximum number of concurrent request
      maxWaitDuration: 100 # Maximum time to wait for a request to be executed
  instances:
    categories:
      baseConfig: default
    genres:
      baseConfig: default
    videos:
      baseConfig: default

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true # Register a health indicator in Spring Boot
      slidingWindowType: COUNT_BASED # Count the number of requests
      slidingWindowSize: 100 # Number of requests when circuit breaker is closed. Verify if failure, successes and slow requests
      minimumNumberOfCalls: 20 # Minimum number of request to identify, if they are healthy or not to consider to open circuit breaker
      permittedNumberOfCallsInHalfOpenState: 10 # Number of requests allowed in the half-open state
      waitDurationInOpenState: 30s # Time to maintain the circuit breaker in open state
      failureRateThreshold: 50 # Percentage of failed requests to open the circuit breaker
      slowCallRateThreshold: 70  # Percentage of slow requests to open the circuit breaker
      slowCallDurationThreshold: 2_000 # Duration of a slow requests in milliseconds
      recordExceptions: # List of exceptions that should be recorded
        - io.github.gabrielmsouza.catalogo.domain.exceptions.InternalErrorException
        - org.springframework.web.client.ResourceAccessException
        - org.springframework.web.client.HttpServerErrorException.InternalServerError
        - org.springframework.web.client.HttpServerErrorException.GatewayTimeout
        - org.springframework.web.client.HttpServerErrorException.ServiceUnavailable
        - java.net.SocketTimeoutException
        - java.net.http.HttpConnectTimeoutException
        - java.net.http.HttpTimeoutException
        - java.util.concurrent.TimeoutException
        - java.io.IOException
  instances:
    categories:
      baseConfig: default
    genres:
      baseConfig: default
    videos:
      baseConfig: default

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3 # Number of retry attempts
      waitDuration: 250 # Time to wait before retrying
      retryExceptions: # List of exceptions that should be retried
        - io.github.gabrielmsouza.catalogo.domain.exceptions.InternalErrorException
        - org.springframework.web.client.ResourceAccessException
        - org.springframework.web.client.HttpServerErrorException.InternalServerError
        - org.springframework.web.client.HttpServerErrorException.GatewayTimeout
        - org.springframework.web.client.HttpServerErrorException.ServiceUnavailable
        - java.net.SocketTimeoutException
        - java.net.http.HttpConnectTimeoutException
        - java.net.http.HttpTimeoutException
        - java.util.concurrent.TimeoutException
        - java.io.IOException
  instances:
    categories:
      baseConfig: default
    genres:
      baseConfig: default
    videos:
      baseConfig: default

logging:
  level:
    ROOT: info
    io.github.gabrielmsouza.catalogo: DEBUG